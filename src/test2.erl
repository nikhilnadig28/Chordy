-module (test2).
-export ([run/1, run2/1]).

run(Node) ->

	A = test:start(Node),
	timer:sleep(50),
	B = test:start(Node, A),
	timer:sleep(50),
	C = test:start(Node, B),
	timer:sleep(50),
	D = test:start(Node, C),
	timer:sleep(5000),
	A ! status,
	B ! status,
	C ! status,
	D ! status,
	timer:sleep(5000),
	io:format("Killing Node C : ~w~n", [C]),
	C ! kill,
	timer:sleep(6000),
	A ! status,
	B ! status,
	D ! status.

run2(Node) ->
	A = test:start(Node),
	timer:sleep(1000),
	Key = test:keys(5000),
	timer:sleep(1000),
	io:format("5000 keys created.~n"),
	test:add(Key, A),
	timer:sleep(1000),
	io:format("Adding Key to Node A~n"),
	timer:sleep(1000),
	test:check(Key, A),
	timer:sleep(1000),
	test:check(Key, A),
	timer:sleep(1000),
	test:check(Key, A),
	timer:sleep(5000),
	B = test:start(Node, A),
	timer:sleep(1000),
	io:format("Adding Node B to A~n"),
	C = test:start(Node, B),
	timer:sleep(1000),
	io:format("Adding Node C to B~n"),
	D = test:start(Node, C),
	timer:sleep(1000),
	io:format("Adding Node D to C~n"),
	timer:sleep(1000),
	test:check(Key, A),
	timer:sleep(1000),
	test:check(Key, A),
	timer:sleep(1000),
	test:check(Key, A).